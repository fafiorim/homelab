---
# ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: homepage
  namespace: default
  labels:
    app.kubernetes.io/name: homepage
secrets:
  - name: homepage

---
# Secret for ServiceAccount
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: homepage
  namespace: default
  labels:
    app.kubernetes.io/name: homepage
  annotations:
    kubernetes.io/service-account.name: homepage

---
# ConfigMap for Homepage configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: homepage
  namespace: default
  labels:
    app.kubernetes.io/name: homepage
data:
  kubernetes.yaml: |
    mode: cluster
    
  settings.yaml: |
    title: "Lab Dashboard"
    # Clean color background
    background: "#1e293b"
    cardBlur: md
    theme: dark
    color: slate
    headerStyle: boxed
    hideVersion: true
    layout:
      - Infrastructure:
          style: row
          columns: 4
      - Media Services:
          style: row  
          columns: 1
      - Network & Security:
          style: row
          columns: 1
      - Kubernetes Management:
          style: row
          columns: 2
    language: en
    startUrl: /
    useEqualHeights: true
    quicklaunch:
      searchDescriptions: true
      hideInternetSearch: false
      hideVisitURL: false
      
  custom.css: |
    /* Clean minimal styling */
    .service-card {
      transition: all 0.2s ease-in-out;
    }
    
    .service-card:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
    }
    
    .bookmark-text:hover {
      transform: translateY(-1px);
    }
  
  bookmarks.yaml: |
    - Infrastructure:
        - Proxmox Firefly:
            - abbr: PF
              href: https://10.10.21.31:8006/
              icon: proxmox.png
        - Proxmox DragonFly:
            - abbr: PD
              href: https://10.10.21.32:8006
              icon: proxmox.png
        - TrueNAS:
            - abbr: TNS
              href: https://10.10.21.14/ui/signin
              icon: truenas.png
        - Ugreen NAS:
            - abbr: UG
              href: https://10.10.21.11:9443/desktop/
              icon: synology.png
    
    - Media & Network:
        - Jellyfin:
            - abbr: JF
              href: http://10.10.21.11:8899/
              icon: jellyfin.png
        - Pi-hole:
            - abbr: PH
              href: https://10.10.21.11:18443/admin/login
              icon: pi-hole.png
    
    - Development:
        - GitHub:
            - abbr: GH
              href: https://github.com/fafiorim
              icon: github.png
        - Docker Hub:
            - abbr: DH
              href: https://hub.docker.com/
              icon: docker.png
    
    - Documentation:
        - Kubernetes Docs:
            - abbr: K8s
              href: https://kubernetes.io/docs/
              icon: kubernetes.png
        - Talos Documentation:
            - abbr: DOC
              href: https://www.talos.dev/docs/
              icon: talos.png
  
  services.yaml: |
    - Infrastructure:
        - Proxmox Firefly:
            href: https://10.10.21.31:8006/
            description: Primary hypervisor
            icon: proxmox.png
        
        - Proxmox DragonFly:
            href: https://10.10.21.32:8006
            description: Secondary hypervisor
            icon: proxmox.png
            
        - TrueNAS:
            href: https://10.10.21.14/ui/signin
            description: Network Attached Storage
            icon: truenas.png
            
        - Ugreen NAS:
            href: https://10.10.21.11:9443/desktop/
            description: Network storage system
            icon: synology.png
    
    - Media Services:
        - Jellyfin:
            href: http://10.10.21.11:8899/
            description: Media streaming server
            icon: jellyfin.png
    
    - Network & Security:
        - Pi-hole:
            href: https://10.10.21.11:18443/admin/login
            description: Network-wide ad blocker
            icon: pi-hole.png
    
    - Kubernetes Management:
        - Homepage Dashboard:
            href: http://10.10.21.200:30090
            description: This dashboard
            icon: homepage.png
            
        - Cluster Overview:
            href: "#"
            description: Kubernetes cluster status
            icon: kubernetes.png
  
  widgets.yaml: |
    # Simplified widgets configuration to avoid API errors
    - search:
        provider: duckduckgo
        target: _blank
    
    - datetime:
        text_size: xl
        format:
          timeStyle: short
          dateStyle: short
          hourCycle: h23
    
    # Basic kubernetes info (less resource intensive)
    - kubernetes:
        cluster:
          show: true
          showLabel: true
          label: "Talos Cluster"
        nodes:
          show: true
          showLabel: true
    
    # Only enable if metrics-server is working properly
    # - resources:
    #     backend: resources
    #     expanded: true
    #     cpu: true
    #     memory: true
    #     disk: /
  
  docker.yaml: ""

---
# Enhanced ClusterRole for Talos Kubernetes
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: homepage
  labels:
    app.kubernetes.io/name: homepage
rules:
  # Core resources
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
      - nodes
      - services
      - configmaps
      - secrets
      - persistentvolumes
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - watch
  
  # Apps resources
  - apiGroups:
      - apps
    resources:
      - deployments
      - daemonsets
      - replicasets
      - statefulsets
    verbs:
      - get
      - list
      - watch
  
  # Networking
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  
  # Traefik resources
  - apiGroups:
      - traefik.containo.us
      - traefik.io
    resources:
      - ingressroutes
      - middlewares
      - traefikservices
    verbs:
      - get
      - list
      - watch
  
  # Metrics (optional - enable only if metrics-server is working)
  - apiGroups:
      - metrics.k8s.io
    resources:
      - nodes
      - pods
    verbs:
      - get
      - list
  
  # CRDs
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
      - customresourcedefinitions/status
    verbs:
      - get
      - list
      - watch
  
  # Events for troubleshooting
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - get
      - list
      - watch

---
# ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: homepage
  labels:
    app.kubernetes.io/name: homepage
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: homepage
subjects:
  - kind: ServiceAccount
    name: homepage
    namespace: default

---
# Service - ClusterIP
apiVersion: v1
kind: Service
metadata:
  name: homepage
  namespace: default
  labels:
    app.kubernetes.io/name: homepage
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: homepage

---
# Service - NodePort
apiVersion: v1
kind: Service
metadata:
  name: homepage-nodeport
  namespace: default
  labels:
    app.kubernetes.io/name: homepage
spec:
  type: NodePort
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
      nodePort: 30090
  selector:
    app.kubernetes.io/name: homepage

---
# PodDisruptionBudget for high availability
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: homepage
  namespace: default
  labels:
    app.kubernetes.io/name: homepage
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: homepage

---
# Deployment with improved stability
apiVersion: apps/v1
kind: Deployment
metadata:
  name: homepage
  namespace: default
  labels:
    app.kubernetes.io/name: homepage
spec:
  revisionHistoryLimit: 3
  replicas: 2  # Increased replicas for better availability
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: homepage
  template:
    metadata:
      labels:
        app.kubernetes.io/name: homepage
    spec:
      serviceAccountName: homepage
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      terminationGracePeriodSeconds: 30
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: homepage
          image: "ghcr.io/gethomepage/homepage:v0.8.8"  # Pin to stable version
          imagePullPolicy: IfNotPresent  # Changed from Always to reduce instability
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            capabilities:
              drop:
                - ALL
          env:
            - name: HOMEPAGE_ALLOWED_HOSTS
              value: "*"
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: LOG_LEVEL
              value: "info"
            - name: DISABLE_DOCKER
              value: "true"  # Disable docker integration for stability
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          # Health checks - simplified to avoid API endpoint issues
          livenessProbe:
            tcpSocket:
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 3000
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          volumeMounts:
            - mountPath: /app/config/custom.css
              name: homepage-config
              subPath: custom.css
            - mountPath: /app/config/bookmarks.yaml
              name: homepage-config
              subPath: bookmarks.yaml
            - mountPath: /app/config/docker.yaml
              name: homepage-config
              subPath: docker.yaml
            - mountPath: /app/config/kubernetes.yaml
              name: homepage-config
              subPath: kubernetes.yaml
            - mountPath: /app/config/services.yaml
              name: homepage-config
              subPath: services.yaml
            - mountPath: /app/config/settings.yaml
              name: homepage-config
              subPath: settings.yaml
            - mountPath: /app/config/widgets.yaml
              name: homepage-config
              subPath: widgets.yaml
            - mountPath: /app/config/logs
              name: logs
            - mountPath: /tmp
              name: tmp-dir
          resources:
            limits:
              cpu: 1000m      # Increased CPU limit
              memory: 1Gi     # Increased memory limit
            requests:
              cpu: 200m       # Increased CPU request
              memory: 256Mi   # Increased memory request
      # Pod affinity to avoid scheduling on same node
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - homepage
              topologyKey: kubernetes.io/hostname
      volumes:
        - name: homepage-config
          configMap:
            name: homepage
        - name: logs
          emptyDir: {}
        - name: tmp-dir
          emptyDir: {}